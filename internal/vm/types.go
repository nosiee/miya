package vm

import (
	"miya/internal/memory"
	"miya/internal/screen"

	"github.com/veandco/go-sdl2/sdl"
)

type VirtualMachine struct {
	registers    registers
	delayTimer   byte
	soundTimer   byte
	delay        uint64
	memory       *memory.Memory
	stack        *memory.Stack
	screen       screen.Chip8Screen
	instructions map[uint16]func(opcode)
	keys         []byte
	keyPressed   chan byte
	waitForKey   bool
	debugMode    bool
}

type registers struct {
	I  uint16
	PC uint16
	V  []byte
}

type opcode struct {
	value uint16
	t     uint16
	x     byte
	y     byte
	n     byte
	nn    byte
	nnn   uint16
}

var font = []byte{
	0xF0, 0x90, 0x90, 0x90, 0xF0,
	0x20, 0x60, 0x20, 0x20, 0x70,
	0xF0, 0x10, 0xF0, 0x80, 0xF0,
	0xF0, 0x10, 0xF0, 0x10, 0xF0,
	0x90, 0x90, 0xF0, 0x10, 0x10,
	0xF0, 0x80, 0xF0, 0x10, 0xF0,
	0xF0, 0x80, 0xF0, 0x90, 0xF0,
	0xF0, 0x10, 0x20, 0x40, 0x40,
	0xF0, 0x90, 0xF0, 0x90, 0xF0,
	0xF0, 0x90, 0xF0, 0x10, 0xF0,
	0xF0, 0x90, 0xF0, 0x90, 0x90,
	0xE0, 0x90, 0xE0, 0x90, 0xE0,
	0xF0, 0x80, 0x80, 0x80, 0xF0,
	0xE0, 0x90, 0x90, 0x90, 0xE0,
	0xF0, 0x80, 0xF0, 0x80, 0xF0,
	0xF0, 0x80, 0xF0, 0x80, 0x80,
}

var keymap = map[sdl.Keycode]byte{
	sdl.K_1: 0x01,
	sdl.K_2: 0x02,
	sdl.K_3: 0x03,
	sdl.K_4: 0x0C,
	sdl.K_q: 0x04,
	sdl.K_w: 0x05,
	sdl.K_e: 0x06,
	sdl.K_r: 0x0D,
	sdl.K_a: 0x07,
	sdl.K_s: 0x08,
	sdl.K_d: 0x09,
	sdl.K_f: 0x0E,
	sdl.K_z: 0x0A,
	sdl.K_x: 0x00,
	sdl.K_c: 0x0B,
	sdl.K_v: 0x0F,
}

const (
	CLC       = 0x0000
	JP        = 0x1000
	CALL      = 0x2000
	SE_VX     = 0x3000
	SNE       = 0x4000
	SE_VX_VY  = 0x5000
	LD_VX     = 0x6000
	ADD       = 0x7000
	VX_VY     = 0x8000
	SNE_VX_VY = 0x9000
	LD_I      = 0xA000
	JP_V0     = 0xB000
	RND       = 0xC000
	DRW       = 0xD000
	SKP       = 0xE000
	LDF       = 0xF000
)
